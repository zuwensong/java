数据库中的锁
    锁是数据库中非常重要的一个概念，当多个事务同时操作一张表时，可能会带来数据不一致问题，所以锁主要作用是保证多个事务操作数据库时，数据
    的完整性和一致性。(锁的出现主要是为了处理并发问题)

    锁的分类
        读锁/共享锁
            一个事务对某数据加了读锁后，其他的事务只能对该数据加读锁

        写锁/排它锁
            一个事务对某数据加了写锁后，其他的事务只能等待该锁释放

        读锁和写锁都是阻塞锁【比如：一个事务获取了读锁，另一个事务想要获取写锁的时候，会被阻塞直到读锁释放为止】

        表级锁:开销小，加锁快;不会出现死锁;锁定粒度大，发生锁冲突的概率最高，并发度最低。
        行级锁:开销大，加锁慢;会出现死锁;锁定粒度最小,发生锁冲突的概率最低，并发度也最高。
        页面锁:开销和加锁时间界于表锁和行锁之间;会出现死锁;锁定粒度界于表锁和行锁之间，并发度一般。


Mysql按照存储引擎的不同支持不同的锁类别
    MySLAM存储引擎
        仅支持表锁
        默认SELECT查询语句会自动上读锁，UPDATE/DELETE语句会上写锁，也可以手动的上锁如：LOCK TABLES table_name READ/WRITE
        释放锁：UNLOCK
        执行LOCK TABLES后，只能访问加锁的这些表，未加锁的表不能访问。并且：如果同一张表在一个事务中有多个别名，需要加锁多次如：
        SELECT * FROM table1 a, table1 b; 上锁需要这么写：LOCK TABLES table1 as a READ table1 as b READ
    Innodb存储引擎 默认为行锁，支持表锁
